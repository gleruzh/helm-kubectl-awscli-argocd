name: ci

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
      - "main"
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:
  release:
    types: [published, edited]

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    concurrency:
      group: build-and-push-${{ github.repository_owner }}-${{ github.event_name }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Read environment file
        run: cat .env >> ${GITHUB_ENV}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/gleruzh/helm-kubectl-awscli-argocd
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        id: test_step
        run: sleep $((RANDOM % 5)) && exit 127
        continue-on-error: true
      - name: Comment on failure integration
        uses: mainmatter/continue-on-error-comment@v1
        with:
          repo-token: ${{ github.token }}
          outcome: ${{ steps.test_step.outcome }}
          test-id: Integration tests failed 
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          build-args: |
            KUBE_VERSION=${{ env.KUBE_VERSION }}
            HELM_VERSION=${{ env.HELM_VERSION }}
            YQ_VERSION=${{ env.YQ_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
