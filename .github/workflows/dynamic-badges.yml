name: badges
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:
  release:
    types: [published, edited]
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Read environment file
        run: |
          while IFS= read -r line; do
            key=$(echo $line | cut -d'=' -f1)
            value=$(echo $line | cut -d'=' -f2)
            value=$(echo -n "$value" | tr -d '\r\n')
            echo "$key=$value" >> $GITHUB_ENV
          done < .env
        shell: bash
      - name: Verify Versions
        run: |
          echo "KUBE_VERSION is $KUBE_VERSION"
          echo "HELM_VERSION is $HELM_VERSION"
          echo "YQ_VERSION is $YQ_VERSION"
          echo "ARGOCD_VERSION is $ARGOCD_VERSION"
          echo "AWSCLI_VERSION is $AWSCLI_VERSION"
      - name: Update badges
        uses: wow-actions/add-badges@v1
        env:
          KUBE_VERSION: ${{ env.KUBE_VERSION }}
          HELM_VERSION: ${{ env.HELM_VERSION }}
          YQ_VERSION: ${{ env.YQ_VERSION }}
          ARGOCD_VERSION: ${{ env.ARGOCD_VERSION }}
          AWSCLI_VERSION: ${{ env.AWSCLI_VERSION }}
          repo_url: ${{ github.event.repository.html_url }}
          repo_name: ${{ github.event.repository.name }}
          repo_owner: ${{ github.event.repository.owner.login }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          badges: |
            [
              {
                "badge": "https://img.shields.io/github/license/${{ env.repo_owner }}/${{ env.repo_name }}?style=flat-square",
                "alt": "MIT License",
                "link": "${{ env.repo_url }}/blob/master/LICENSE"
              },
              {
                "badge": "https://img.shields.io/static/v1?label=&labelColor=white&message=helm-v${{ env.HELM_VERSION }}&color=0F1689&style=flat-square&logo=helm&logoColor=0F1689",
                "alt": "Helm version",
                "link": "https://github.com/helm/helm/releases/tag/v${{ env.HELM_VERSION }}"
              },
              {
                "badge": "https://img.shields.io/static/v1?label=&labelColor=white&message=kubernetes-v${{ env.KUBE_VERSION }}&color=326CE5&style=flat-square&logo=kubernetes&logoColor=326CE5",
                "alt": "Kubectl version",
                "link": "https://github.com/kubernetes/kubernetes/releases/tag/v${{ env.KUBE_VERSION }}"
              },
              {
                "badge": "https://img.shields.io/static/v1?label=&labelColor=white&message=argocd-v${{ env.ARGOCD_VERSION }}&color=EF7B4D&style=flat-square&logo=argo&logoColor=EF7B4D",
                "alt": "ArgoCD CLI version",
                "link": "https://github.com/argoproj/argo-cd/releases/tag/v${{ env.ARGOCD_VERSION }}"
              },
              {
                "badge": "https://img.shields.io/static/v1?label=&labelColor=white&message=awscli-v${{ env.AWSCLI_VERSION }}&color=232F3E&style=flat-square&logo=amazonaws&logoColor=232F3E",
                "alt": "AWS CLI version",
                "link": "https://github.com/aws/aws-cli/releases/tag/${{ env.AWSCLI_VERSION }}"
              },
              {
                "badge": "https://img.shields.io/static/v1?label=&labelColor=white&message=jq-v${{ env.YQ_VERSION }}&color=yellow&style=flat-square",
                "alt": "yq version",
                "link": "https://github.com/mikefarah/yq/releases/tag/v${{ env.YQ_VERSION }}"
              }
            ]